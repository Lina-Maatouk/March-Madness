mutate(Offensive_Rating = Avg_Offense/120.36154)
defense <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Defense = sum(KENPOM.ADJUSTED.DEFENSE)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_Defense = Overall_Defense/Tournament_Appearances) %>%
mutate(Defensive_Rating = 88.01429/Avg_Defense)
barthag <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Barthag = sum(BARTHAG)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_Barthag = Overall_Barthag/Tournament_Appearances) %>%
mutate(National_Rank = Avg_Barthag/0.9520769)
strength_of_schedule <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Schedule_Strength = sum(ELITE.SOS)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_SOS = Overall_Schedule_Strength/Tournament_Appearances) %>%
mutate(Strength_of_Schedule = Avg_SOS/38.84)
field_goal_percent <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Field_Goal_Percent = sum(EFG..)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_EFG = Overall_Field_Goal_Percent/Tournament_Appearances) %>%
mutate(Effective_Field_Goal_Percent = Avg_EFG/57.042856)
win_percentage <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Win_Percentage = sum(WIN..)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_WIN = Overall_Win_Percentage/Tournament_Appearances) %>%
mutate(Win_Percentage = Avg_WIN/86.29)
historical_season_strength <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Tournament_Appearances = n()) %>%
cbind(offense$Offensive_Rating,
defense$Defensive_Rating,
barthag$National_Rank,
strength_of_schedule$Strength_of_Schedule,
field_goal_percent$Effective_Field_Goal_Percent,
win_percentage$Win_Percentage) %>%
dplyr::rename("Offensive_Rating" = "offense$Offensive_Rating",
"Defensive_Rating" = "defense$Defensive_Rating",
"National_Rank" = "barthag$National_Rank",
"Strength_of_Schedule" = "strength_of_schedule$Strength_of_Schedule",
"Effective_Field_Goal_Percent" = "field_goal_percent$Effective_Field_Goal_Percent",
"Win_Percentage" = "win_percentage$Win_Percentage") %>%
mutate(Historical_Strength = Offensive_Rating + Defensive_Rating + National_Rank + Strength_of_Schedule + Effective_Field_Goal_Percent + Win_Percentage)
TEAM.ROUND <- c(64, 32, 16, 8, 4, 2, 1)
rating <- c(0, 1, 2, 3, 4, 5, 6)
round_scoring <- data.table(TEAM.ROUND, rating)
tournament_performance <- best_team_previous_years %>%
group_by(TEAM, TEAM.ROUND) %>%
summarise(Tournament_Appearances = n()) %>%
left_join(round_scoring, by = c("TEAM.ROUND")) %>%
mutate(True_Score = Tournament_Appearances * rating) %>%
summarise(Total_Score = sum(True_Score)) %>%
mutate(Historical_Tournament_Strength = Total_Score/6.5)
setDT(tournament_performance)
setDT(historical_season_strength)
setDT(top_performers_2023)
top_performers_2023 <- top_performers_2023[tournament_performance, Historical_Tournament_Strength:= i.Historical_Tournament_Strength,on =.(Team = TEAM)] %>%
replace(is.na(.), 0)
top_performers_2023 <- top_performers_2023[historical_season_strength, Historical_Strength:= i.Historical_Strength,on =.(Team = TEAM)]
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2))
View(top_performers_2023)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength = "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength = "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25)),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength =+ "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25)),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength == "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25)),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength == "NA", 1, 2)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength == " ", 1, 2)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
if_else(Historical_Strength == " ", 1, 2)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength == 0, 1, 2)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength = 0, 1, 2)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(is.na(Historical_Strength) == TRUE, 1, 2)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength <= "NA", 1, 2)
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", 1, 2)
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", 2, 1)
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", 1, 2)
power_ranking_metric <-ifelse(Historical_Strength  "NA", 1, 2)
power_ranking_metric <-ifelse(Historical_Strength == "NA", 1, 2)
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", 1, 2)
power_ranking_metric <-ifelse(power_ranking_metric[[Historical_Strength]] == "NA", 1, 2)
power_ranking_metric <-ifelse([[Historical_Strength]] == "NA", 1, 2)
str(power_ranking_metric)
print(power_ranking_metric)
power_ranking_metric <-ifelse([[Historical_Strength]] == "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25)),
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25)),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
print(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength)
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", mutate(Overall_Team_Rating = (Current_Year_Strength * 0.75) + (Historical_Tournament_Strength * 0.25)),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength)
print(power_ranking_metric)
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.75) + (power_ranking_metric$Historical_Tournament_Strength * 0.25)),
mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.7) + (power_ranking_metric$Historical_Strength * 0.1) + (power_ranking_metric$Historical_Tournament_Strength * 0.2)))
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 1) + (power_ranking_metric$Historical_Tournament_Strength * 1)),
mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 1) + (power_ranking_metric$Historical_Strength * 1) + (power_ranking_metric$Historical_Tournament_Strength * 1)))
power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", 1, 2)
na < mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.75) + (power_ranking_metric$Historical_Tournament_Strength * 0.25))
na <- mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.75) + (power_ranking_metric$Historical_Tournament_Strength * 0.25))
print(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength)
na <- mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.75) + (power_ranking_metric$Historical_Tournament_Strength * 0.25))
rm(list = ls())
setwd("C:/Users/lukec/OneDrive/Documents/data332/March-Madness/data")
#reads in all the .csv files
team_data <- readRDS("GameData.rds")
tournament_game_data <- read.csv("Tournament Game Data.csv")
top_performers_2023 <- team_data %>%
select(Seed, Team, OffenseKP, DefenseKP, Barthag, SOS, EFG.., WIN..) %>%
mutate(Offensive_Rating = OffenseKP/124.0870,
Defensive_Rating = 87.3259/DefenseKP,
National_Rank = Barthag/.959,
Strength_of_Schedule = SOS/38.469,
Effective_Field_Goal_Percent = EFG../58.6,
Win_Percentage = WIN../91.17647,
Current_Year_Strength = Offensive_Rating + Defensive_Rating + National_Rank + Strength_of_Schedule + Effective_Field_Goal_Percent + Win_Percentage)
best_team_previous_years <- tournament_game_data %>%
dplyr::filter(TEAM %in%  c("Alabama", "Houston", "Kansas", "Purdue", "Arizona", "Marquette", "Texas", "UCLA",
"Baylor", "Gonzaga", "Kansas St.", "Xavier", "Connecticut", "Indiana", "Tennessee",
"Virginia", "Duke", "Miami FL", "Saint Mary's", "San Diego St.", "Creighton",
"Iowa St.", "Kentucky", "TCU", "Michigan St.", "Missouri", "Northwestern",
"Texas A&M", "Arkansas", "Iowa", "Maryland", "Memphis", "Auburn", "Florida Atlantic",
"Illinois", "West Virginia", "Boise St.", "Penn St.", "USC", "Utah St.",
"Arizona St.", "Mississippi St.", "Nevada", "North Carolina St.", "Pittsburgh",
"Providence", "College of Charleston", "Drake", "Oral Roberts", "VCU", "Furman",
"Iona", "Kent St.", "Louisiana Lafayette", "Grand Canyon", "Kennesaw St.",
"Montana St.", "UC Santa Barbara", "Colgate", "Princeton", "UNC Asheville", "Vermont",
"Fairleigh Dickinson", "Howard", "Northern Kentucky", "Southeast Missouri St.",
"Texas A&M Corpus Chris", "Texas Southern")) %>%
#filtering for only distinct team and year values (not including 2023)--don't need values for each round
head(n=361)
tournament_appearances <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Tournament_Appearances = n())
offense <-  best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Offense = sum(KENPOM.ADJUSTED.OFFENSE)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_Offense = Overall_Offense/Tournament_Appearances) %>%
mutate(Offensive_Rating = Avg_Offense/120.36154)
defense <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Defense = sum(KENPOM.ADJUSTED.DEFENSE)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_Defense = Overall_Defense/Tournament_Appearances) %>%
mutate(Defensive_Rating = 88.01429/Avg_Defense)
barthag <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Barthag = sum(BARTHAG)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_Barthag = Overall_Barthag/Tournament_Appearances) %>%
mutate(National_Rank = Avg_Barthag/0.9520769)
strength_of_schedule <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Schedule_Strength = sum(ELITE.SOS)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_SOS = Overall_Schedule_Strength/Tournament_Appearances) %>%
mutate(Strength_of_Schedule = Avg_SOS/38.84)
field_goal_percent <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Field_Goal_Percent = sum(EFG..)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_EFG = Overall_Field_Goal_Percent/Tournament_Appearances) %>%
mutate(Effective_Field_Goal_Percent = Avg_EFG/57.042856)
win_percentage <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Overall_Win_Percentage = sum(WIN..)) %>%
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
mutate(Avg_WIN = Overall_Win_Percentage/Tournament_Appearances) %>%
mutate(Win_Percentage = Avg_WIN/86.29)
historical_season_strength <- best_team_previous_years %>%
group_by(TEAM) %>%
summarise(Tournament_Appearances = n()) %>%
cbind(offense$Offensive_Rating,
defense$Defensive_Rating,
barthag$National_Rank,
strength_of_schedule$Strength_of_Schedule,
field_goal_percent$Effective_Field_Goal_Percent,
win_percentage$Win_Percentage) %>%
dplyr::rename("Offensive_Rating" = "offense$Offensive_Rating",
"Defensive_Rating" = "defense$Defensive_Rating",
"National_Rank" = "barthag$National_Rank",
"Strength_of_Schedule" = "strength_of_schedule$Strength_of_Schedule",
"Effective_Field_Goal_Percent" = "field_goal_percent$Effective_Field_Goal_Percent",
"Win_Percentage" = "win_percentage$Win_Percentage") %>%
mutate(Historical_Strength = Offensive_Rating + Defensive_Rating + National_Rank + Strength_of_Schedule + Effective_Field_Goal_Percent + Win_Percentage)
TEAM.ROUND <- c(64, 32, 16, 8, 4, 2, 1)
rating <- c(0, 1, 2, 3, 4, 5, 6)
round_scoring <- data.table(TEAM.ROUND, rating)
tournament_performance <- best_team_previous_years %>%
group_by(TEAM, TEAM.ROUND) %>%
summarise(Tournament_Appearances = n()) %>%
left_join(round_scoring, by = c("TEAM.ROUND")) %>%
mutate(True_Score = Tournament_Appearances * rating) %>%
summarise(Total_Score = sum(True_Score)) %>%
mutate(Historical_Tournament_Strength = Total_Score/6.5)
setDT(tournament_performance)
setDT(historical_season_strength)
setDT(top_performers_2023)
top_performers_2023 <- top_performers_2023[tournament_performance, Historical_Tournament_Strength:= i.Historical_Tournament_Strength,on =.(Team = TEAM)] %>%
replace(is.na(.), 0)
top_performers_2023 <- top_performers_2023[historical_season_strength, Historical_Strength:= i.Historical_Strength,on =.(Team = TEAM)]
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength)
#power_ranking_metric <-ifelse(power_ranking_metric$Historical_Strength == "NA", 1, 2) mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.75) + (power_ranking_metric$Historical_Tournament_Strength * 0.25)),
#mutate(Overall_Team_Rating = (power_ranking_metric$Current_Year_Strength * 0.7) + (power_ranking_metric$Historical_Strength * 0.1) + (power_ranking_metric$Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(shiny)
library(DT)
library(data.table)
library(lubridate)
rm(list = ls())
setwd("C:/Users/lukec/OneDrive/Documents/data332/March-Madness/data")
#reading in relevant data files
team_data <- readRDS("GameData.rds")
tournament_game_data <- read.csv("Tournament Game Data.csv")
#creating a data frame to determine the strongest team in the 2023 regular season based on 6 different stats
top_performers_2023 <- team_data %>%
select(Seed, Team, OffenseKP, DefenseKP, Barthag, SOS, EFG.., WIN..) %>%
#making new variables where teams with the highest value are assigned 1, and teams with lesser values are assigned a number relative to the highest ranking team
mutate(Offensive_Rating = OffenseKP/124.0870,
Defensive_Rating = 87.3259/DefenseKP,
National_Rank = Barthag/.959,
Strength_of_Schedule = SOS/38.469,
Effective_Field_Goal_Percent = EFG../58.6,
Win_Percentage = WIN../91.17647,
#combining the six stats above to determine the strongest teams based on the 2023 regular season
Current_Year_Strength = Offensive_Rating + Defensive_Rating + National_Rank + Strength_of_Schedule + Effective_Field_Goal_Percent + Win_Percentage)
team_history_data <- tournament_game_data %>%
#removing miscellaneous teams that are not in the 2023 NCAA March Madness Tournament
dplyr::filter(TEAM %in%  c("Alabama", "Houston", "Kansas", "Purdue", "Arizona", "Marquette", "Texas", "UCLA",
"Baylor", "Gonzaga", "Kansas St.", "Xavier", "Connecticut", "Indiana", "Tennessee",
"Virginia", "Duke", "Miami FL", "Saint Mary's", "San Diego St.", "Creighton",
"Iowa St.", "Kentucky", "TCU", "Michigan St.", "Missouri", "Northwestern",
"Texas A&M", "Arkansas", "Iowa", "Maryland", "Memphis", "Auburn", "Florida Atlantic",
"Illinois", "West Virginia", "Boise St.", "Penn St.", "USC", "Utah St.",
"Arizona St.", "Mississippi St.", "Nevada", "North Carolina St.", "Pittsburgh",
"Providence", "College of Charleston", "Drake", "Oral Roberts", "VCU", "Furman",
"Iona", "Kent St.", "Louisiana Lafayette", "Grand Canyon", "Kennesaw St.",
"Montana St.", "UC Santa Barbara", "Colgate", "Princeton", "UNC Asheville", "Vermont",
"Fairleigh Dickinson", "Howard", "Northern Kentucky", "Southeast Missouri St.",
"Texas A&M Corpus Chris", "Texas Southern")) %>%
#filtering for only distinct team and year values (not including 2023)--don't need values for each round
head(n=361)
#calculating how many times each team qualified for the tournament for later use
tournament_appearances <- team_history_data %>%
group_by(TEAM) %>%
summarise(Tournament_Appearances = n())
offense <-  team_history_data %>%
group_by(TEAM) %>%
#calculating the sum of each team's regular season offensive ratings in the years that they made the tournament
summarise(Overall_Offense = sum(KENPOM.ADJUSTED.OFFENSE)) %>%
#merging the tournament appearances value for each team and renaming it
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
#calculating the average annual offensive rating of each team
mutate(Avg_Offense = Overall_Offense/Tournament_Appearances) %>%
#assigning offensive ranking values to each team (out of 1)
mutate(Offensive_Rating = Avg_Offense/120.36154)
defense <- team_history_data %>%
group_by(TEAM) %>%
#calculating the sum of each team's regular season defensive ratings in the years that they made the tournament
summarise(Overall_Defense = sum(KENPOM.ADJUSTED.DEFENSE)) %>%
#merging the tournament appearances value for each team and renaming it
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
#calculating the average annual defensive rating of each team
mutate(Avg_Defense = Overall_Defense/Tournament_Appearances) %>%
#assigning defensive ranking values to each team (out of 1)
mutate(Defensive_Rating = 88.01429/Avg_Defense)
barthag <- team_history_data %>%
group_by(TEAM) %>%
#calculating the sum of each team's regular season barthag ratings in the years that they made the tournament
summarise(Overall_Barthag = sum(BARTHAG)) %>%
#merging the tournament appearances value for each team and renaming it
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
#calculating the average annual barthag rating of each team
mutate(Avg_Barthag = Overall_Barthag/Tournament_Appearances) %>%
#assigning barthag ranking values to each team (out of 1)
mutate(National_Rank = Avg_Barthag/0.9513333)
strength_of_schedule <- team_history_data %>%
group_by(TEAM) %>%
#calculating the sum of each team's regular season schedule strength ratings in the years that they made the tournament
summarise(Overall_Schedule_Strength = sum(ELITE.SOS)) %>%
#merging the tournament appearances value for each team and renaming it
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
#calculating the average annual schedule strength rating of each team
mutate(Avg_SOS = Overall_Schedule_Strength/Tournament_Appearances) %>%
#assigning schedule strength ranking values to each team (out of 1)
mutate(Strength_of_Schedule = Avg_SOS/38.84)
field_goal_percent <- team_history_data %>%
group_by(TEAM) %>%
#calculating the sum of each team's regular season effective field goal percentage in the years that they made the tournament
summarise(Overall_Field_Goal_Percent = sum(EFG..)) %>%
#merging the tournament appearances value for each team and renaming it
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
#calculating the average annual effective field goal percentage of each team
mutate(Avg_EFG = Overall_Field_Goal_Percent/Tournament_Appearances) %>%
#assigning schedule effective field goal percentage ranking values to each team (out of 1)
mutate(Effective_Field_Goal_Percent = Avg_EFG/57.042856)
win_percentage <- team_history_data %>%
group_by(TEAM) %>%
#calculating the sum of each team's regular season win percentage in the years that they made the tournament
summarise(Overall_Win_Percentage = sum(WIN..)) %>%
#merging the tournament appearances value for each team and renaming it
cbind(tournament_appearances$Tournament_Appearances) %>%
dplyr::rename("Tournament_Appearances" = "tournament_appearances$Tournament_Appearances") %>%
#calculating the average annual win percentage of each team
mutate(Avg_WIN = Overall_Win_Percentage/Tournament_Appearances) %>%
#assigning schedule win percentage ranking values to each team (out of 1)
mutate(Win_Percentage = Avg_WIN/86.29)
#creating a data frame to combine the stat values calculated in the previous six data frames
historical_season_strength <- team_history_data %>%
group_by(TEAM) %>%
summarise(Tournament_Appearances = n()) %>%
#joining in rating values for six calculated statistical rankings
cbind(offense$Offensive_Rating,
defense$Defensive_Rating,
barthag$National_Rank,
strength_of_schedule$Strength_of_Schedule,
field_goal_percent$Effective_Field_Goal_Percent,
win_percentage$Win_Percentage) %>%
#renaming the joined columns
dplyr::rename("Offensive_Rating" = "offense$Offensive_Rating",
"Defensive_Rating" = "defense$Defensive_Rating",
"National_Rank" = "barthag$National_Rank",
"Strength_of_Schedule" = "strength_of_schedule$Strength_of_Schedule",
"Effective_Field_Goal_Percent" = "field_goal_percent$Effective_Field_Goal_Percent",
"Win_Percentage" = "win_percentage$Win_Percentage") %>%
#combining the six stats above to determine the strongest teams based on the last 15 regular seasons
mutate(Historical_Strength = Offensive_Rating + Defensive_Rating + National_Rank + Strength_of_Schedule + Effective_Field_Goal_Percent + Win_Percentage)
#creating objects to be merged with the following data frame--assigning point values to specific rounds in the tournament
TEAM.ROUND <- c(64, 32, 16, 8, 4, 2, 1)
rating <- c(0, 1, 2, 3, 4, 5, 6)
#organizing the objects above in data table format
round_scoring <- data.table(TEAM.ROUND, rating)
#creating a data frame to determine the best tournament performers in the last 15 years
tournament_performance <- team_history_data %>%
group_by(TEAM, TEAM.ROUND) %>%
summarise(Tournament_Appearances = n()) %>%
#merging the data table created above
left_join(round_scoring, by = c("TEAM.ROUND")) %>%
#calculating the value associated with each round for each team
mutate(True_Score = Tournament_Appearances * rating) %>%
#summing the individual true scores for each team
summarise(Total_Score = sum(True_Score)) %>%
#calculating each team's torunament performance relative to Kansas, the best performer (out of 6 like the two previous metrics)
mutate(Historical_Tournament_Strength = Total_Score/6.5)
#making these data frames into data tables for the purpose of merging the newly calculated metrics
setDT(tournament_performance)
setDT(historical_season_strength)
setDT(top_performers_2023)
#merging Historical_Tournament_Strength metric with top_performers_2023
top_performers_2023 <- top_performers_2023[tournament_performance, Historical_Tournament_Strength:= i.Historical_Tournament_Strength,on =.(Team = TEAM)] %>%
#assigning 0 values to the 6 teams that have never qualified for the tournament before this year
replace(is.na(.), 0)
#merging Historical_Strength metric with top_performers_2023
top_performers_2023 <- top_performers_2023[historical_season_strength, Historical_Strength:= i.Historical_Strength,on =.(Team = TEAM)]
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == NULL, (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)
power_ranking_metric <- top_performers_2023 %>%
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == NULL, (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2))
power_ranking_metric <- top_performers_2023 %>%
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == NULL, (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2))
View(power_ranking_metric)
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == is.na(.), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2))
View(power_ranking_metric)
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == is.na(.), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength)
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == is.na(.), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == is.null(.), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == is.null(), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2)))
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(Historical_Strength == is.null(.), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(is.na(Historical_Strength), (Current_Year_Strength * 0.8 + Historical_Tournament_Strength * 0.2),
(Current_Year_Strength * 0.7 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.2)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(is.na(Historical_Strength), (Current_Year_Strength * 0.9 + Historical_Tournament_Strength * 0.1),
(Current_Year_Strength * 0.8 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.1)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(is.na(Historical_Strength), (Current_Year_Strength * 0.7 + Historical_Tournament_Strength * 0.3),
(Current_Year_Strength * 0.6 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.3)))
View(power_ranking_metric)
power_ranking_metric <- top_performers_2023 %>%
select(Seed, Team, Current_Year_Strength, Historical_Strength, Historical_Tournament_Strength) %>%
#ifelse(Historical_Strength == is.na(.), mutate(Overall_Team_Rating = (Current_Year_Strength * 0.8) + (Historical_Tournament_Strength * 0.2)),
#mutate(Overall_Team_Rating = (Current_Year_Strength * 0.7) + (Historical_Strength * 0.1) + (Historical_Tournament_Strength * 0.2)))
mutate(Overall_Team_Rating = ifelse(is.na(Historical_Strength), (Current_Year_Strength * 0.85 + Historical_Tournament_Strength * 0.15),
(Current_Year_Strength * 0.75 + Historical_Strength * 0.1 + Historical_Tournament_Strength * 0.15)))
View(power_ranking_metric)
